---
title: "CellProfiler Analysis"
format: html
editor_options: 
  chunk_output_type: console
---

## load packages
```{r}
# rstudioapi::getActiveDocumentContext()$path |>
#   dirname() |>
#   setwd()
setwd("C:\\Users\\haohe\\Desktop\\fx")

# load packages
library(tidyverse)
library(cowplot)
library(lemon)
library(ggridges)
```

## read cellprofiler db
```{r}
# load function
source("D:/Script/R_functions/read_sqlite.R")

# read db
raw <- read_sqlite("cp_result.db")
# raw <- map("cp_result.db", read_sqlite) %>% 
#   bind_rows(.id="Metadata_source")

glimpse(raw$image)
glimpse(raw$objects)
```


## define magnification
```{r}
magification <- "20x"
image_width <- unique(raw$image$Image_Width)

# unit: um
objective_view <- c("100x" = 133, "60x" = 221, "20x" = 600)
length_per_pixel <- objective_view[magification] * (1/image_width)
print(str_glue("per pixel length: {round(length_per_pixel, 3)} uM"))
```

## metadata position
```{r}
position_meta <- read_csv("position_metadata.csv") %>% 
  # some rows were skipped cause incorrect focus
  filter(!is.na(`P Index`)) %>% 
  select(Metadata_prefix = prefix, 
           Metadata_position = `P Index`,
           Metadata_position_name = `Position Name`)

if(is.na(position_meta$Metadata_position_name[1])) {
  # you should edit position data here if no position name
  print("no position name found, should edit it here")
  
  # position_meta <- position_meta %>%
  #   mutate(Metadata_well = case_when(
  #     Metadata_position %in% 1:20 ~ "SURF-EBFP2",
  #     Metadata_position %in% 21:40 ~ "SURF-mIFP2",
  #     Metadata_position %in% 41:60 ~ "cpSURF-EBFP2",
  #     Metadata_position %in% 61:80 ~ "cpSURF-mIFP",
  #     Metadata_position %in% 81:100 ~ "SURF-EBFP2+GRB2-mIFP",
  #     Metadata_position %in% 101:120 ~ "SURF-mIFP+GRB2-EBFP2",
  #     Metadata_position %in% 121:140 ~ "cpSURF-EBFP2+GRB2-mIFP",
  #     Metadata_position %in% 141:160 ~ "cpSURF-mIFP+GRB2-EBFP2"
  #   ) %>% factor(c("SURF-EBFP2","cpSURF-EBFP2","SURF-mIFP2","cpSURF-mIFP",
  #                  "SURF-EBFP2+GRB2-mIFP","cpSURF-EBFP2+GRB2-mIFP",
  #                  "SURF-mIFP+GRB2-EBFP2","cpSURF-mIFP+GRB2-EBFP2")),
  #   Metadata_field = Metadata_position)
  
  position_meta <- expand_grid(row=LETTERS[1:8], col=2:11) %>% 
    unite("well", row, col, remove = F, sep="") %>% 
    mutate(row_image_order=ifelse(row %in% c("A","C","E","G"), "lr", "rl")) %>% 
    mutate(row_image_reorder=ifelse(row_image_order=="lr", col, 24-col)) %>% 
    arrange(row, row_image_reorder) %>% 
    select(Metadata_well=well) %>% 
    expand_grid(Metadata_field=1:5) %>% 
    bind_cols(Metadata_position=1:400) %>% 
    expand_grid(Metadata_prefix=unique(raw$image$Metadata_prefix), .)

# } else {
#   # get position name data
#   print("extract well use position name")
#   position_meta <- position_meta %>% 
#     # by well format
#     separate_wider_delim(., Metadata_position_name, 
#                          "#",
#                          names = c("Metadata_well", 
#                                    "Metadata_field"),
#                          cols_remove = F) %>% 
#     mutate(Metadata_field=as.integer(Metadata_field))
}

glimpse(position_meta)
```

## metadata compound
```{r}
# kinase inhibitor
cmpd <- "L6000-Natural product 2 1354 cpds.xlsx" %>% 
  readxl::read_xlsx(sheet = "Compound List") %>% 
  transmute(Metadata_Plate=Plate, 
            Metadata_well=str_c(str_to_upper(Row), Col, sep=""),
            Metadata_ID=ID,
            Metadata_Name=MOLENAME,
            Metadata_Target=Target,
            Metadata_Pathway=Pathways)
cmpd <- right_join(
  tibble(Metadata_Plate=c(unique(cmpd$Metadata_Plate), "PHD136611"),
         Metadata_prefix=c(str_c("plate-",1:5), "plate-3-2")),
  cmpd,
  relationship = "many-to-many"
)

glimpse(cmpd)
```

## tidy image
```{r}
# glimpse(raw$image)
Image <- raw$image %>% 
  select(!c(starts_with("Image_Count_"),
            matches("Image_Intensity_Percentile_[25]_.*"))) %>% 
  rename_with(\(x) str_replace(x, "Intensity_Percentile_1", "bg"))

# Image <- Image %>% 
#   mutate(Metadata_prefix=factor(Metadata_prefix,
#                                 str_c("P",1:14))) %>% 
#   mutate(Metadata_well=factor(Metadata_well,
#                               crossing(x=LETTERS[1:16], y=1:24) %>% 
#                                 unite("well", x, y, sep="") %>% 
#                                 pull(well)))

# merge with position meta
Image <- Image %>% 
  # right_join(position_meta, ., 
  #            by=join_by(Metadata_prefix, Metadata_position)) %>%
  right_join(cmpd, .,
             by=join_by(Metadata_prefix, Metadata_well)) %>% 
  select(!c(Metadata_directory, Metadata_stack, 
            Metadata_timepoint, Image_Width))

glimpse(Image)
```

## tidy cellRegion
```{r}
# glimpse(raw$objects$Object)
cellRegion <- raw$objects$Object %>% 
  select(!any_of(c("cellRegion_Parent_ConvertImageObjects",
                   "ObjectNumber",
                   "cellRegion_Number_Object_Number"))) %>% 
  right_join(Image, ., 
             by=join_by(ImageNumber)) %>% 
  # scale pixel to actual length
  mutate(across(matches("(Area)"), \(x) x * (length_per_pixel)^2)) %>% 
  mutate(across(matches(
    "(Diameter)|(AxisLength)|(Radius)|(Perimeter)$"),
    \(x) x * length_per_pixel))

# cellRegion <- cellRegion %>% 
#   mutate(Metadata_prefix=factor(Metadata_prefix,
#                                 str_c("P",1:14))) %>% 
#   mutate(Metadata_well=factor(Metadata_well,
#                               crossing(x=LETTERS[1:16], y=1:24) %>% 
#                                 unite("well", x, y, sep="") %>% 
#                                 pull(well))) %>% 
#   mutate(Metadata_lib=ifelse(is.na(Metadata_name), "DMSO", "Library"),
#          .after = Metadata_well)

glimpse(cellRegion)


cellRegion <- filter(cellRegion, !is.na(Metadata_RackCode))
```

## subtract background
```{r}
# get all channel names
bg_channels <- colnames(Image) %>% 
  str_subset("Image_bg") %>% 
  str_replace_all("Image_bg_", "")
bg_intensity <- colnames(Image) %>% 
  str_subset("Image_bg") %>% 
  map_dbl(~ Image[.x] %>% pull() %>% 
            mean(na.rm=T, trim=0.1) %>% round()) %>% 
  set_names(bg_channels)

# process one channel each time
print("substract background")
for(ch in bg_channels) {
  cellRegion <- cellRegion %>% 
  rowwise() %>% 
  mutate(across(
    c(matches(str_glue(".*Intensity_{ch}$"))), 
    \(x) max(0, (x - !!as.name(str_glue("Image_bg_{ch}"))))) ) %>% 
    ungroup()
}
```


## area
```{r}
fact_var <- "Metadata_prefix"
axis_var <- "Metadata_well"
fill_var <- "Metadata_prefix"

# cell area per field
cellRegion %>% 
  reframe(mean=mean(cellRegion_AreaShape_Area, na.rm=T),
          sd=sd(cellRegion_AreaShape_Area, na.rm=T),
          se=sd/sqrt(n()),
          .by=c(all_of(c(fact_var, axis_var, fill_var)))) %>% 
  ggplot(aes(!!as.name(axis_var),
             mean, 
             color = !!as.name(fill_var))) +
  geom_pointrange(aes(ymin=mean-se, ymax=mean+se), 
                  size=0.15, show.legend = F) +
  ggh4x::facet_grid2(
    # rows=vars(Metadata_vector, Metadata_conc),
    rows=vars(!!as.name(fact_var)),
    scales = "free_x", space = "fixed",
    axes  = "y", remove_labels = "y") +
  # lemon::facet_rep_grid(rows=vars(!!as.name(fact_var)),
  #                       repeat.tick.labels = T) +
  labs(x="", y="Mean Cell Covered Area [uM]") +
  # coord_cartesian(xlim = c(0, 200), ylim = c(0, 2000)) +
  theme_bw(8) +
  theme(strip.background = element_rect(fill=NA), 
        strip.text = element_text(size=6),
        axis.text.x = element_text(size=4, angle = 90, vjust=0.5, hjust=1),
        panel.grid = element_blank(),
        legend.position = "top")
ggsave2(str_glue("{Sys.Date()}_cellRegion_area_mean_se.pdf"),
        width=(colnames(cellRegion) %>% 
                 str_subset("Intensity_MeanIntensity_") %>% 
                 length())*5, 
        height=length(unique(cellRegion[[fact_var]]))*1.5)
```


## intensity
```{r}
fact_var <- "Metadata_prefix"
axis_var <- "Metadata_well"
fill_var <- "Metadata_prefix"

# intensity per field
cellRegion %>% 
  pivot_longer(
    matches("cellRegion_Intensity_MeanIntensity_ch.*"),
    names_to = "channel", 
    names_prefix = "cellRegion_Intensity_MeanIntensity_",
    values_to = "Intensity") %>% 
  reframe(mean=mean(Intensity, na.rm=T),
          sd=sd(Intensity, na.rm=T),
          se=sd/sqrt(n()),
          .by=c(all_of(c(fact_var, axis_var, fill_var, "channel")))) %>% 
  ggplot(aes(!!as.name(axis_var),
             mean, 
             color = !!as.name(fill_var))) +
  geom_pointrange(aes(ymin=mean-se, ymax=mean+se), 
                  size=0.15, show.legend = F) +
  ggh4x::facet_grid2(
    rows=vars(!!as.name(fact_var)),
    cols=vars(channel),
    axes = "margins", 
    scales = "free", 
    independent = "none") +
  labs(x="", y="Mean Intensity per Field") +
  # coord_cartesian(xlim = c(0, 200), ylim = c(0, 2000)) +
  theme_bw(8) +
  theme(strip.background = element_rect(fill=NA), 
        strip.text = element_text(size=6),
        axis.text.x = element_text(size=4, angle = 90, vjust=0.5, hjust=1),
        panel.grid = element_blank(),
        legend.position = "top")
ggsave2(str_glue("{Sys.Date()}_cellRegion_intensity_mean_se.pdf"),
        width=(colnames(cellRegion) %>% 
                 str_subset("Intensity_MeanIntensity_") %>% 
                 length())*5, 
        height=length(unique(cellRegion[[fact_var]]))*1.5)
```


## granularity
```{r}
fact_var <- "Metadata_prefix"
axis_var <- "Metadata_well"
fill_var <- "Metadata_prefix"

# granularity per field
cellRegion %>% 
  pivot_longer(
    matches("cellRegion_Granularity_.*"),
    # any_of(as.character(str_glue("cellRegion_Intensity_MeanIntensity_{channels}"))),
    names_to = c("granularity_order", "channel"), 
    names_pattern = "cellRegion_Granularity_(.+)_(.+)$",
    # names_prefix = "cellRegion_Intensity_MeanIntensity_",
    values_to = "granularity_value") %>% 
  filter(granularity_order %in% 2:4) %>% 
  mutate(granularity_order=str_c("Granularity_", granularity_order)) %>% 
  reframe(mean=mean(granularity_value, na.rm=T),
          sd=sd(granularity_value, na.rm=T),
          se=sd/sqrt(n()),
          .by=c(all_of(c(fact_var, axis_var, fill_var,
                         "granularity_order", "channel")))) %>% 
  ggplot(aes(!!as.name(axis_var),
             mean, 
             color = !!as.name(fill_var))) +
  geom_pointrange(aes(ymin=mean-se, ymax=mean+se), 
                  size=0.15, show.legend = F) +
  ggh4x::facet_grid2(cols=vars(granularity_order), 
                     rows=vars(!!as.name(fact_var)),
                     scales="fixed",
                     # independent="y",
                     axes = "margins") +
  labs(x="", y="Mean Granularity per Field") +
  theme_bw(8) +
  theme(strip.background = element_rect(fill=NA), 
        strip.text = element_text(size=6),
        axis.text.x = element_text(size=4, angle = 90, vjust=0.5, hjust=1),
        panel.grid = element_blank(),
        legend.position = "top")
ggsave2(str_glue("{Sys.Date()}_cellRegion_granularity_mean_se.pdf"),
        width=(colnames(cellRegion) %>% 
                 str_subset("Granularity_") %>% 
                 length())*3, 
        height=length(unique(cellRegion[[fact_var]]))*1.5)
```

## SAVE
```{r}
# ratio summarized to well
cellRegion_per_well <- cellRegion %>% 
  reframe(across(starts_with("cellRegion_"), mean),
          .by = setdiff(starts_with("Metadata_"), matches("(Metadata_field)|(Metadata_position_name)|(Metadata_position)|(Metadata_stack)|(Metadata_timepoint)"))) %>% 
  mutate(across(!starts_with("Metadata_"), ~ round(.x, 3)))

writexl::write_xlsx(
  list(cellRegion_per_well=cellRegion_per_well),
  str_glue("{Sys.Date()}_data.xlsx"))

# plot 
cellRegion_per_well %>% 
  arrange(desc(granularity_2_ch1)) %>% 
  mutate(uid=row_number()) %>% 
  mutate(area_ratio_mean=ifelse(area_ratio_mean > 2, 2, area_ratio_mean),
         area_ratio_mean=ifelse(area_ratio_mean < -2, -2, area_ratio_mean)) %>% 
  ggplot() +
  # geom_point(aes(uid, area_ratio_mean),
  #            size=1, color="steelblue", data=data_plot) +
  geom_hline(yintercept = 0, color="grey50", linetype="dashed", linewidth=1.5) +
  geom_point(aes(uid, intensity_ch1_ratio_mean),
             size=0.7, color="steelblue", alpha=0.75) +
  geom_pointpath(aes(uid, granularity_2_ch1_ratio_mean, 
                     size=area_ratio_mean), 
                 color="darkred",  alpha=0.75) +
  scale_size_continuous(range=c(0.2, 1.5)) +
  coord_cartesian(ylim = c(-2, 2)) +
  # guides(size="Area Ratio to DMSO (log2)") +
  labs(x="Compound Rank Based on Granularity", 
       y="Intensity Ratio to DMSO (log2)", 
       size="Cell Covered Area Ratio to DMSO (log2)") +
  theme_bw() +
  theme(legend.position = "top")
ggsave2(str_glue("{Sys.Date()}_ratio_rank_summary.pdf"),
        width=7, 
        height=5)
```


## ratio to DMSO
```{r}
grouping_var <- c("Metadata_prefix")

# subset control
cellRegion_dmso <- cellRegion %>% 
  filter(Metadata_lib == "DMSO") %>% 
  reframe(across(
    matches(".*(AreaShape_Area)|(Intensity_MeanIntensity_)|(Granularity_).*"),
    ~ mean(.x, na.rm=T, trim=0.25)),
    .by = all_of(grouping_var)) %>% 
  reframe(across(
    !starts_with("Metadata_"),
    ~ mean(.x, na.rm=T, trim=0.25))) %>% 
  rename_with(~ str_c(.x, "_DMSO"), everything())

# get ratio
cellRegion_ratio <- cellRegion %>% 
  cross_join(cellRegion_dmso) %>% 
  mutate(area_ratio = (cellRegion_AreaShape_Area / 
           cellRegion_AreaShape_Area_DMSO) %>% log2(),
         intensity_ch1_ratio = (cellRegion_Intensity_MeanIntensity_ch1 / 
           cellRegion_Intensity_MeanIntensity_ch1_DMSO) %>% log2(),
         granularity_1_ch1_ratio = (cellRegion_Granularity_1_ch1 / 
           cellRegion_Granularity_1_ch1_DMSO) %>% log2(),
         granularity_2_ch1_ratio = (cellRegion_Granularity_2_ch1 / 
           cellRegion_Granularity_2_ch1_DMSO) %>% log2(),
         granularity_3_ch1_ratio = (cellRegion_Granularity_3_ch1 / 
           cellRegion_Granularity_3_ch1_DMSO) %>% log2(),
         granularity_4_ch1_ratio = (cellRegion_Granularity_4_ch1 / 
           cellRegion_Granularity_4_ch1_DMSO) %>% log2(),
         granularity_5_ch1_ratio = (cellRegion_Granularity_5_ch1 / 
           cellRegion_Granularity_5_ch1_DMSO) %>% log2())
```


## ratio area & intensity
```{r}
fact_var <- "Metadata_prefix"
axis_var <- "Metadata_well"
fill_var <- "Metadata_prefix"


# cell area per field
cellRegion_ratio %>% 
  reframe(mean=mean(area_ratio, na.rm=T),
          sd=sd(area_ratio, na.rm=T),
          se=sd/sqrt(n()),
          .by=c(all_of(c(fact_var, axis_var, fill_var)))) %>% 
  ggplot(aes(!!as.name(axis_var),
             mean, 
             color = !!as.name(fill_var))) +
  geom_pointrange(aes(ymin=mean-se, ymax=mean+se), 
                  size=0.15, show.legend = F) +
  ggh4x::facet_grid2(
    rows=vars(!!as.name(fact_var)),
    scales="fixed",
    # independent="y",
    axes = "margins") +
  labs(x="", y="Ratio of Cell Covered Area to DMSO (log2)") +
  # coord_cartesian(xlim = c(0, 200), ylim = c(0, 2000)) +
  theme_bw(8) +
  theme(strip.background = element_rect(fill=NA), 
        strip.text = element_text(size=6),
        axis.text.x = element_text(size=4, angle = 90, vjust=0.5, hjust=1),
        panel.grid = element_blank(),
        legend.position = "top")
ggsave2(str_glue("{Sys.Date()}_cellRegion_area_ratio_mean_se.pdf"),
        width=(colnames(cellRegion) %>% 
                 str_subset("Intensity_MeanIntensity_") %>% 
                 length())*5, 
        height=length(unique(cellRegion[[fact_var]]))*1.5)

# NxMAD
intensity_mad <- cellRegion_ratio %>% 
  filter(Metadata_lib == "DMSO") %>% 
  pull(intensity_ch1_ratio) %>% 
  mad() %>% 
  magrittr::multiply_by(3)

# intensity per field
cellRegion_ratio %>% 
  pivot_longer(
    matches("intensity_.*_ratio"),
    names_to = "channel", 
    names_pattern = "intensity_(.*)_ratio",
    values_to = "ratio") %>%
  reframe(mean=mean(ratio, na.rm=T),
          sd=sd(ratio, na.rm=T),
          se=sd/sqrt(n()),
          .by=c(all_of(c(fact_var, axis_var, fill_var, "channel")))) %>% 
  ggplot(aes(!!as.name(axis_var),
             mean, 
             color = !!as.name(fill_var))) +
  geom_pointrange(aes(ymin=mean-se, ymax=mean+se), 
                  size=0.15, show.legend = F) +
  geom_hline(yintercept = -intensity_mad, color="grey50", linetype=2) +
  geom_hline(yintercept = intensity_mad, color="grey50", linetype=2) +
  ggh4x::facet_grid2(
    cols=vars(channel), 
    rows=vars(!!as.name(fact_var)),
    scales="fixed",
    # independent="y",
    axes = "margins") +
  labs(x="", y="Ratio of Intensity to DMSO (log2)") +
  # coord_cartesian(xlim = c(0, 200), ylim = c(0, 2000)) +
  theme_bw(8) +
  theme(strip.background = element_rect(fill=NA), 
        strip.text = element_text(size=6),
        axis.text.x = element_text(size=4, angle = 90, vjust=0.5, hjust=1),
        panel.grid = element_blank(),
        legend.position = "top")
ggsave2(str_glue("{Sys.Date()}_cellRegion_intensity_ratio_mean_se.pdf"),
        width=(colnames(cellRegion) %>% 
                 str_subset("Intensity_MeanIntensity_") %>% 
                 length())*5, 
        height=length(unique(cellRegion[[fact_var]]))*1.5)
```


## ratio granularity
```{r}
fact_var <- "Metadata_prefix"
axis_var <- "Metadata_well"
fill_var <- "Metadata_prefix"

# NxMAD
granularity_mad <- cellRegion_ratio %>% 
  filter(Metadata_lib == "DMSO") %>% 
  select(matches("granularity_[1-5]_ch1_ratio")) %>% 
  as.matrix() %>% 
  mad() %>% 
  magrittr::multiply_by(3)

# granularity per field
cellRegion_ratio %>% 
  pivot_longer(
    matches("granularity_.*_.*_ratio"),
    # any_of(as.character(str_glue("cellRegion_Intensity_MeanIntensity_{channels}"))),
    names_to = c("granularity_order", "channel"), 
    names_pattern = "granularity_(.*)_(.*)_ratio$",
    # names_prefix = "cellRegion_Intensity_MeanIntensity_",
    values_to = "ratio") %>% 
  filter(granularity_order %in% 2:5) %>% 
  mutate(granularity_order=str_c("Granularity_", granularity_order)) %>% 
  reframe(mean=mean(ratio, na.rm=T),
          sd=sd(ratio, na.rm=T),
          se=sd/sqrt(n()),
          .by=c(all_of(c(fact_var, axis_var, fill_var,
                         "granularity_order", "channel")))) %>% 
  ggplot(aes(!!as.name(axis_var),
             mean, 
             color = !!as.name(fill_var))) +
  geom_pointrange(aes(ymin=mean-se, ymax=mean+se), 
                  size=0.15, show.legend = F) +
  geom_hline(yintercept = -granularity_mad, color="grey50", linetype=2) +
  geom_hline(yintercept = granularity_mad, color="grey50", linetype=2) +
  ggh4x::facet_grid2(cols=vars(granularity_order), 
                     rows=vars(!!as.name(plate_var)),
                     scales="free_x",
                     # independent="y",
                     axes = "all") +
  labs(x="", y="Ratio of Granularity to DMSO (log2)") +
  theme_bw(8) +
  theme(strip.background = element_rect(fill=NA), 
        strip.text = element_text(size=6),
        axis.text.x = element_text(size=4, angle = 90, vjust=0.5, hjust=1),
        panel.grid = element_blank(),
        legend.position = "top")
ggsave2(str_glue("{Sys.Date()}_cellRegion_granularity_ratio_mean_se.pdf"),
        width=(colnames(cellRegion) %>% 
                 str_subset("Granularity_") %>% 
                 length())*3, 
        height=length(unique(cellRegion[[fact_var]]))*1.5)
```

## summarize ratio to well
```{r}
# ratio summarized to well
cellRegion_ratio_well <- cellRegion_ratio %>% 
  reframe(across(ends_with("_ratio"), 
                 list(mean=mean, sd=sd)),
          .by = setdiff(starts_with("Metadata_"),
                        matches("(Metadata_field)|(Metadata_position_name)|(Metadata_position)|(Metadata_stack)|(Metadata_timepoint)"))) %>% 
  mutate(across(!starts_with("Metadata_"), ~ round(.x, 3)))

# plot 
cellRegion_ratio_well %>% 
  arrange(desc(granularity_2_ch1_ratio_mean)) %>% 
  mutate(uid=row_number()) %>% 
  mutate(area_ratio_mean=ifelse(area_ratio_mean > 2, 2, area_ratio_mean),
         area_ratio_mean=ifelse(area_ratio_mean < -2, -2, area_ratio_mean)) %>% 
  ggplot() +
  # geom_point(aes(uid, area_ratio_mean),
  #            size=1, color="steelblue", data=data_plot) +
  geom_hline(yintercept = 0, color="grey50", linetype="dashed", linewidth=1.5) +
  geom_point(aes(uid, intensity_ch1_ratio_mean),
             size=0.7, color="steelblue", alpha=0.75) +
  geom_pointpath(aes(uid, granularity_2_ch1_ratio_mean, 
                     size=area_ratio_mean), 
                 color="darkred",  alpha=0.75) +
  scale_size_continuous(range=c(0.2, 1.5)) +
  coord_cartesian(ylim = c(-2, 2)) +
  # guides(size="Area Ratio to DMSO (log2)") +
  labs(x="Compound Rank Based on Granularity", 
       y="Intensity Ratio to DMSO (log2)", 
       size="Cell Covered Area Ratio to DMSO (log2)") +
  theme_bw() +
  theme(legend.position = "top")
ggsave2(str_glue("{Sys.Date()}_ratio_rank_summary.pdf"),
        width=7, 
        height=5)
```


## SAVE ratio
```{r}
writexl::write_xlsx(
  list(cellRegion_ratio=cellRegion_ratio,
       cellRegion_ratio_well=cellRegion_ratio_well),
  str_glue("{Sys.Date()}_data_ratio_to_dmso.xlsx"))
```


