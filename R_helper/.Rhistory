library(tidyverse)
library(MAGeCKFlute)
library(corrplot)
rstudioapi::getActiveDocumentContext()$path |>
dirname() |>
setwd()
# project_dir <- "/media/hao/Data1/CRISPR_screen/Library_GeCKOv2/2025-02-14_r-secretase_293T_PB"
setwd(project_dir)
getwd()
col_names <- file.path(project_dir, counts_dir, counts_file) %>%
read_table(n_max=5) %>% colnames() %>% .[-1:-2] %>% print()
project_dir <- '.'
col_names <- file.path(project_dir, counts_dir, counts_file) %>%
read_table(n_max=5) %>% colnames() %>% .[-1:-2] %>% print()
library(tidyverse)
library(MAGeCKFlute)
library(corrplot)
rstudioapi::getActiveDocumentContext()$path |>
dirname() |>
setwd()
project_dir <- '.'
# project_dir <- "/media/hao/Data1/CRISPR_screen/Library_GeCKOv2/2025-02-14_r-secretase_293T_PB"
# setwd(project_dir)
counts_dir <- "counts"
counts_file <- "mageck.count_normalized.txt"
# counts_file <- "mageck.count.txt"
qc_dir <- "QC"
rra_dir <- "RRA_analysis"
mle_dir <- "MLE_analysis"
species <- "hsa"
top_n <- 20
comparison_names <- c("APP_L", "APP_H", "NOTCH1_L", "NOTCH1_H", "Gal4DBD_L", "Gal4DBD_H")
col_names <- file.path(project_dir, counts_dir, counts_file) %>%
read_table(n_max=5) %>% colnames() %>% .[-1:-2] %>% print()
relabel <- col_names %>%
enframe(name=NULL) %>%
separate_wider_delim(value, delim="_R", names=c("group", NA), cols_remove=F) %>%
mutate(rep=row_number(), .by=group) %>%
mutate(label=str_glue("{group}#{rep}")) %>%
select(label, value) %>%
deframe() %>% print()
# relabel <- c("DMSO#1"="R5_CKDL240004656-1A_H2WGGDSXC_L2",
#              "DMSO#2"="R6_CKDL240004656-1A_H2WGGDSXC_L2",
#              "DMSO#3"="R7_CKDL240004657-1A_H2WGGDSXC_L2",
#              "DMSO#4"="R8_CKDL240004657-1A_H2WGGDSXC_L2",
#              "DMSO_L#1"="R9_CKDL240004658-1A_H2WGGDSXC_L2",
#              "DMSO_L#2"="R10_CKDL240004658-1A_H2WGGDSXC_L2",
#              "DMSO_L#3"="R11_CKDL240004659-1A_H2WGGDSXC_L2",
#              "DMSO_L#4"="R12_CKDL240004659-1A_H2WGGDSXC_L2",
#              "DMSO_H#1"="R13_CKDL240004660-1A_H2WGGDSXC_L2",
#              "DMSO_H#2"="R14_CKDL240004660-1A_H2WGGDSXC_L2",
#              "DMSO_H#3"="R15_CKDL240004661-1A_H2WGGDSXC_L2",
#              "DMSO_H#4"="R16_CKDL240004661-1A_H2WGGDSXC_L2",
#              "BruA#1"="R17_CKDL240004662-1A_H2WGGDSXC_L2",
#              "BruA#2"="R18_CKDL240004662-1A_H2WGGDSXC_L2",
#              "BruA#3"="R19_CKDL240004663-1A_H2WGGDSXC_L2",
#              "BruA#4"="R20_CKDL240004663-1A_H2WGGDSXC_L2")
select_mode <- "pos"
gene_summary_paths <- str_c(comparison_names, ".gene_summary.txt", sep="") %>%
map_chr(~ file.path(rra_dir, .x)) %>%
set_names(nm=comparison_names)
sgrna_summary_paths <- str_c(comparison_names, ".sgrna_summary.txt", sep="") %>%
map_chr(~ file.path(rra_dir, .x)) %>%
set_names(nm=comparison_names)
gene_datalist <- gene_summary_paths %>%
map(~ read_table2(.x) %>%
transmute(symbol=id, n_sgRNA=num,
good_sgrna=!!as.name(str_glue("{select_mode}|goodsgrna")),
rank=!!as.name(str_glue("{select_mode}|rank")),
score=!!as.name(str_glue("{select_mode}|score")),
pvalue=!!as.name(str_glue("{select_mode}|p-value")),
lfc=!!as.name(str_glue("{select_mode}|lfc"))) %>%
arrange(rank))
sgrna_datalist <- sgrna_summary_paths %>%
map(~ read_table2(.x) %>%
transmute(sgrna,
symbol=Gene,
control_count, treat_count=treatment_count,
control_mean, treat_mean,
score, pvalue=p.twosided, lfc=LFC, high_in_treatment) %>%
arrange(pvalue))
notch_L_selected_genes
notch_L_selected_genes <- c( 'PSENEN','ERAL1','RPL21','NELFA','LRRC58','NELFCD','MBD3','ZNF655','BPHL','EXTL3','ATP2B1','HOXA6','VEZF1','TMEM97','OSGEPL1','CNOT2','SLC7A6','BATF3','RNF41','RNM')
notch_H_selected_genes <- c(
'BCL2L2-PABPN1','HSPE1','ZNF586','CCDC3','GFER','DPP9','FEM1A','PHB2','NELL2','ELP3','NTN1','ISCA2','GRPEL1','RPL12','DYNC1I2','TBCC','PYCR1','DPH3','TRMT5','SLC25A44')
notch_L_selected_genes <- c( 'PSENEN','ERAL1','RPL21','NELFA','LRRC58','NELFCD','MBD3','ZNF655','BPHL','EXTL3','ATP2B1','HOXA6','VEZF1','TMEM97','OSGEPL1','CNOT2','SLC7A6','BATF3','RNF41','RNM')
notch_H_selected_genes <- c(
'BCL2L2-PABPN1','HSPE1','ZNF586','CCDC3','GFER','DPP9','FEM1A','PHB2','NELL2','ELP3','NTN1','ISCA2','GRPEL1','RPL12','DYNC1I2','TBCC','PYCR1','DPH3','TRMT5','SLC25A44')
notch_H_selected_genes
sgrna_datalist$NOTCH1_L
sgrna_datalist$NOTCH1_L %>%
filter(symbol %in% notch_L_selected_genes) %>%
view()
slice_max(lfc, n=1, by=symbol)
sgrna_datalist$NOTCH1_L %>%
filter(symbol %in% notch_L_selected_genes) %>%
slice_max(lfc, n=1, by=symbol)
notch_L_selected_genes <- c( 'PSENEN','ERAL1','RPL21','NELFA','LRRC58','NELFCD','MBD3','ZNF655','BPHL','EXTL3','ATP2B1','HOXA6','VEZF1','TMEM97','OSGEPL1','CNOT2','SLC7A6','BATF3','RNF41','RNMT')
notch_L_selected_genes <- c( 'PSENEN','ERAL1','RPL21','NELFA','LRRC58','NELFCD','MBD3','ZNF655','BPHL','EXTL3','ATP2B1','HOXA6','VEZF1','TMEM97','OSGEPL1','CNOT2','SLC7A6','BATF3','RNF41','RNMT')
sgrna_datalist$NOTCH1_L %>%
filter(symbol %in% notch_L_selected_genes) %>%
slice_max(lfc, n=1, by=symbol)
notch_L_selected_genes <- c( 'PSENEN','ERAL1','RPL21','NELFA','LRRC58','NELFCD','MBD3','ZNF655','BPHL','EXTL3','ATP2B1','HOXA6','VEZF1','TMEM97','OSGEPL1','CNOT2','SLC7A6','BATF3','RNF41','RNMT')
notch_L_selected_genes_top_sgrna <-
sgrna_datalist$NOTCH1_L %>%
filter(symbol %in% notch_L_selected_genes) %>%
slice_max(lfc, n=1, by=symbol)
notch_H_selected_genes <- c(
'BCL2L2-PABPN1','HSPE1','ZNF586','CCDC3','GFER','DPP9','FEM1A','PHB2','NELL2','ELP3','NTN1','ISCA2','GRPEL1','RPL12','DYNC1I2','TBCC','PYCR1','DPH3','TRMT5','SLC25A44')
notch_H_selected_genes_top_sgrna <-
sgrna_datalist$NOTCH1_H %>%
filter(symbol %in% notch_L_selected_genes) %>%
slice_max(lfc, n=1, by=symbol)
notch_H_selected_genes_top_sgrna
selected_sgrna <- list(notch_L=notch_L_selected_genes_top_sgrna,
notch_H=notch_L_selected_genes_top_sgrna) %>%
list_rbind(names_to="group")
selected_sgrna
sgrna_seq <- '../../metadata/Human_GeCKOv2_Library_combine.csv' %>%
read_csv()
getwd()
sgrna_seq <- '../metadata/Human_GeCKOv2_Library_combine.csv' %>%
read_csv()
sgrna_seq
sgrna_seq <- '../metadata/Human_GeCKOv2_Library_combine.csv' %>%
read_csv(col_names =F)
sgrna_seq
selected_sgrna
sgrna_seq <- '../metadata/Human_GeCKOv2_Library_combine.csv' %>%
read_csv(col_names =F) %>%
set_names(c("sgrna","sequence","symbol"))
selected_sgrna <- list(notch_L=notch_L_selected_genes_top_sgrna,
notch_H=notch_L_selected_genes_top_sgrna) %>%
list_rbind(names_to="group") %>%
left_join(sgrna_seq)
selected_sgrna
selected_sgrna <- list(notch_L=notch_L_selected_genes_top_sgrna,
notch_H=notch_L_selected_genes_top_sgrna) %>%
list_rbind(names_to="group") %>%
right_join(sgrna_seq,.)
writexl::write_xlsx(
selected_sgrna,
str_glue("{rra_dir}/{Sys.Date()}_rra_selected_hits.xlsx"))
sgrna_seq
list(notch_L=notch_L_selected_genes_top_sgrna,
notch_H=notch_L_selected_genes_top_sgrna) %>%
list_rbind(names_to="group")
sgrna_seq
selected_sgrna <- list(notch_L=notch_L_selected_genes_top_sgrna,
notch_H=notch_L_selected_genes_top_sgrna) %>%
list_rbind(names_to="group") %>%
right_join(sgrna_seq,.)
selected_sgrna
writexl::write_xlsx(
selected_sgrna,
str_glue("{rra_dir}/{Sys.Date()}_rra_selected_hits.xlsx"))
selected_sgrna <- list(notch_L=notch_L_selected_genes_top_sgrna,
notch_H=notch_L_selected_genes_top_sgrna) %>%
list_rbind(names_to="group") %>% view()
selected_sgrna <- list(notch_L=notch_L_selected_genes_top_sgrna,
notch_H=notch_H_selected_genes_top_sgrna) %>%
list_rbind(names_to="group") %>% view()
right_join(sgrna_seq,.)
selected_sgrna <- list(notch_L=notch_L_selected_genes_top_sgrna,
notch_H=notch_H_selected_genes_top_sgrna) %>%
list_rbind(names_to="group") %>%
right_join(sgrna_seq,.)
writexl::write_xlsx(
selected_sgrna,
str_glue("{rra_dir}/{Sys.Date()}_rra_selected_hits.xlsx"))
notch_L_selected_genes <- c( 'PSENEN','ERAL1','RPL21','NELFA','LRRC58','NELFCD','MBD3','ZNF655','BPHL','EXTL3','ATP2B1','HOXA6','VEZF1','TMEM97','OSGEPL1','CNOT2','SLC7A6','BATF3','RNF41','RNMT')
notch_L_selected_genes_top_sgrna <-
sgrna_datalist$NOTCH1_L %>%
filter(symbol %in% notch_L_selected_genes) %>%
slice_max(lfc, n=1, by=symbol)
notch_H_selected_genes <- c(
'BCL2L2-PABPN1','HSPE1','ZNF586','CCDC3','GFER','DPP9','FEM1A','PHB2','NELL2','ELP3','NTN1','ISCA2','GRPEL1','RPL12','DYNC1I2','TBCC','PYCR1','DPH3','TRMT5','SLC25A44')
notch_H_selected_genes_top_sgrna <-
sgrna_datalist$NOTCH1_H %>%
filter(symbol %in% notch_L_selected_genes) %>%
slice_max(lfc, n=1, by=symbol)
notch_L_selected_genes_top_sgrna
notch_L_selected_genes_top_sgrna
notch_H_selected_genes_top_sgrna
notch_L_selected_genes_top_sgrna
notch_H_selected_genes_top_sgrna
notch_L_selected_genes_top_sgrna
notch_H_selected_genes <- c(
'BCL2L2-PABPN1','HSPE1','ZNF586','CCDC3','GFER','DPP9','FEM1A','PHB2','NELL2','ELP3','NTN1','ISCA2','GRPEL1','RPL12','DYNC1I2','TBCC','PYCR1','DPH3','TRMT5','SLC25A44')
notch_H_selected_genes_top_sgrna <-
sgrna_datalist$NOTCH1_H %>%
filter(symbol %in% notch_H_selected_genes) %>%
slice_max(lfc, n=1, by=symbol)
sgrna_seq <- '../metadata/Human_GeCKOv2_Library_combine.csv' %>%
read_csv(col_names =F) %>%
set_names(c("sgrna","sequence","symbol"))
selected_sgrna <- list(notch_L=notch_L_selected_genes_top_sgrna,
notch_H=notch_H_selected_genes_top_sgrna) %>%
list_rbind(names_to="group") %>%
right_join(sgrna_seq,.)
writexl::write_xlsx(
selected_sgrna,
str_glue("{rra_dir}/{Sys.Date()}_rra_selected_hits.xlsx"))
selected_sgrna
writexl::write_xlsx(
selected_sgrna,
str_glue("{rra_dir}/{Sys.Date()}_rra_selected_hits.xlsx"))
library(tidyverse)
library(Biostrings)
rstudioapi::getActiveDocumentContext()$path %>%
dirname() %>% setwd()
# setwd("C:/Users/haohe/Desktop")
## load vector sequence
lentiCRISPRv2 <- "./CRISPRv2.txt" %>%
read_delim(delim="/t", col_names=F) %>%
pull()
# replace this sequence with sgRNA sequence
lentiCRISPRv2_replacement <- "gagacggttgtaaatgagcacacaaaatacacatgctaaaatattatattctatgacctttataaaatcaaccaaaatcttctttttaataactttagtatcaataattagaatttttatgttcctttttgcaaacttttaataaaaatgagcaaaataaaaaaacgctagttttagtaactcgcgttgttttcttcacctttaataatagctactccaccacttgttcctaagcggtcagctcctgcttcaatcattttttgagcatcttcaaatgttctaactccaccagctgctttaactaaagcattgtctttaacaactgacttcattagtttaacatcttcaaatgttgcacctgattttgaaaatcctgttgatgttttaacaaattctaatccagcttcaacagctatttcacaagctttcatgatttcttcttttgttaataaacaattttccataatacatttaacaacatgtgatccagctgctttttttacagctttcatgtcttctaaaactaattcataatttttgtcttttaatgcaccaatatttaataccatatcaatttctgttgcaccatctttaattgcttcagaaacttcgaatgcttttgtagctgttgtgcatgcacctagaggaaaacctacaacatttgttattcctacatttgtgccttttaataattctttacaatagcttgttcaatatgaattaacacaaactgttgcaaaatcaaattcaattgcttcatcacataattgtttaatttcagctttcgtagcatcttgttttaataatgtgtgatctatatatttgtttagtttcattttttctcctatatattcatttttaattttaattctttaataatttcgtctactttaactttagcgttttgaacagattcaccaacacctataaaataaatttttagtttaggttcagttccacttgggcgaacagcaaatcatgacttatcttctaaataaaattttagtaagtcttgtcctggcatattatacattccatcgatgtagtcttcaacattaacaactttaagtccagcaatttgagttaagggtgttgctctcaatgatttcattaatggttcaatttttaatttcttttcttctggtttaaaattcaagtttaaagtgaaagtgtaatatgcacccatttctttaaataaatcttctaaatagtctactaatgttttattttgttttttataaaatcaagcagcctctgctattaatatagaagcttgtattccatctttatctctagctgagtcatcaattacatatccataactttcttcataagcaaaaacaaaatttaatccgttatcttcttctttagcaatttctctacccattcatttaaatccagttaaagtttttacaatattaactccatatttttcatgagcgattctatcacccaaatcacttgttacaaaacttgaatatagagccggattttttggaatgctatttaagcgttttagatttgataattttcaatcaattaaaattggtcctgtttgatttccatctaatcttacaaaatgaccatcatgttttattgccattccaaatctgtcagcatctgggtcattcataataataatatctgcatcatgtttaataccatattcaagcggtatttttcatgcaggatcaaattctggatttggatttacaacatttttaaatgtttcatcttcaaatgcatgctcttcaacctcaataacgttatatcctgattcacgtaatatttttggggtaaatttagttcctgttccattaactgcgctaaaaataatttttaaatcttttttagcttcttgctcttttttgtacgtctct"
crispr <- readxl::read_excel("~/Deskptop/2025-03-31_rra_selected_hits.xlsx")
normalizePath("~")
crispr <- readxl::read_excel(
file.path(normalizePath("~"), "../Deskptop/2025-03-31_rra_selected_hits.xlsx"))
crispr <- readxl::read_excel(
file.path("C:/Users/haohe/Deskptop/2025-03-31_rra_selected_hits.xlsx"))
crispr <- readxl::read_excel(
file.path("C:/Users/haohe/Desktop/2025-03-31_rra_selected_hits.xlsx"))
crispr
crispr <- readxl::read_excel(
file.path("C:/Users/haohe/Desktop/2025-03-31_rra_selected_hits.xlsx")) %>%
dplyr::select(symbol=symbol,
sgRNA=sequence)
## get primer and map
crispr_res <- crispr %>%
mutate(rep=row_number(), .by=c(symbol), .after=symbol) %>%
mutate(sgRNA_revCom=DNAStringSet(sgRNA) %>%
reverseComplement() %>%
as.character()) %>%
mutate(
f_name=str_glue("sg{symbol}#{rep}_F"),
f_primer=str_c("caccg", sgRNA),
r_name=str_glue("sg{symbol}#{rep}_R"),
r_primer=str_c("aaac", sgRNA_revCom, "c")) %>%
mutate(map=map_chr(sgRNA, \(x) str_replace(
lentiCRISPRv2, lentiCRISPRv2_replacement, x))) %>%
print()
crispr
readxl::read_excel(
file.path("C:/Users/haohe/Desktop/2025-03-31_rra_selected_hits.xlsx"))
readxl::read_excel(
file.path("C:/Users/haohe/Desktop/2025-03-31_rra_selected_hits.xlsx")) %>%
arrange(group)
crispr <- readxl::read_excel(
file.path("C:/Users/haohe/Desktop/2025-03-31_rra_selected_hits.xlsx")) %>%
arrange(group) %>%
dplyr::select(symbol=symbol,
sgRNA=sequence)
## get primer and map
crispr_res <- crispr %>%
mutate(rep=row_number(), .by=c(symbol), .after=symbol) %>%
mutate(sgRNA_revCom=DNAStringSet(sgRNA) %>%
reverseComplement() %>%
as.character()) %>%
mutate(
f_name=str_glue("sg{symbol}#{rep}_F"),
f_primer=str_c("caccg", sgRNA),
r_name=str_glue("sg{symbol}#{rep}_R"),
r_primer=str_c("aaac", sgRNA_revCom, "c")) %>%
mutate(map=map_chr(sgRNA, \(x) str_replace(
lentiCRISPRv2, lentiCRISPRv2_replacement, x))) %>%
print()
## write
write_csv(crispr_res, str_glue("{Sys.Date()}_crispr.csv"))
if(!dir.exists("map")) dir.create("map")
for(i in seq_len(nrow(crispr_res))) {
Biostrings::writeXStringSet(
DNAStringSet(crispr_res[[i, "map"]]),
str_glue('map/sg{crispr_res[[i, "symbol"]]}#{crispr_res[[i, "rep"]]}.fasta')
)
}
getwd()
crispr <- readxl::read_excel(
file.path("C:/Users/haohe/Desktop/2025-03-31_rra_selected_hits.xlsx")) %>%
arrange(group) %>%
dplyr::select(symbol=str_c(symbol, group, sep="_"),
sgRNA=sequence)
crispr <- readxl::read_excel(
file.path("C:/Users/haohe/Desktop/2025-03-31_rra_selected_hits.xlsx")) %>%
arrange(group) %>%
mutate(symbol=str_c(symbol, group, sep="_"))
crispr
crispr <- readxl::read_excel(
file.path("C:/Users/haohe/Desktop/2025-03-31_rra_selected_hits.xlsx")) %>%
arrange(group) %>%
mutate(symbol=str_c(group, symbol, sep="_"))
crispr
## get primer and map
crispr_res <- crispr %>%
mutate(rep=row_number(), .by=c(symbol), .after=symbol) %>%
mutate(sgRNA_revCom=DNAStringSet(sgRNA) %>%
reverseComplement() %>%
as.character()) %>%
mutate(
f_name=str_glue("sg{symbol}#{rep}_F"),
f_primer=str_c("caccg", sgRNA),
r_name=str_glue("sg{symbol}#{rep}_R"),
r_primer=str_c("aaac", sgRNA_revCom, "c")) %>%
mutate(map=map_chr(sgRNA, \(x) str_replace(
lentiCRISPRv2, lentiCRISPRv2_replacement, x))) %>%
print()
crispr <- readxl::read_excel(
file.path("C:/Users/haohe/Desktop/2025-03-31_rra_selected_hits.xlsx")) %>%
arrange(group) %>%
mutate(symbol=str_c(group, symbol, sep="_"))
crispr <- readxl::read_excel(
file.path("C:/Users/haohe/Desktop/2025-03-31_rra_selected_hits.xlsx")) %>%
arrange(group) %>%
mutate(symbol=str_c(group, symbol, sep="_")) %>%
dplyr::select(symbol=symbol,
sgRNA=sequence)
## get primer and map
crispr_res <- crispr %>%
mutate(rep=row_number(), .by=c(symbol), .after=symbol) %>%
mutate(sgRNA_revCom=DNAStringSet(sgRNA) %>%
reverseComplement() %>%
as.character()) %>%
mutate(
f_name=str_glue("sg{symbol}#{rep}_F"),
f_primer=str_c("caccg", sgRNA),
r_name=str_glue("sg{symbol}#{rep}_R"),
r_primer=str_c("aaac", sgRNA_revCom, "c")) %>%
mutate(map=map_chr(sgRNA, \(x) str_replace(
lentiCRISPRv2, lentiCRISPRv2_replacement, x))) %>%
print()
if(!dir.exists("map")) dir.create("map")
## write
write_csv(crispr_res, str_glue("{Sys.Date()}_crispr.csv"))
if(!dir.exists("map")) dir.create("map")
for(i in seq_len(nrow(crispr_res))) {
Biostrings::writeXStringSet(
DNAStringSet(crispr_res[[i, "map"]]),
str_glue('map/P{i+254}_sg{crispr_res[[i, "symbol"]]}#{crispr_res[[i, "rep"]]}.fasta')
)
}
## write
write_csv(crispr_res, str_glue("{Sys.Date()}_crispr.csv"))
if(!dir.exists("map")) dir.create("map")
for(i in seq_len(nrow(crispr_res))) {
Biostrings::writeXStringSet(
DNAStringSet(crispr_res[[i, "map"]]),
str_glue('map/P{i+253}_sg{crispr_res[[i, "symbol"]]}#{crispr_res[[i, "rep"]]}.fasta')
)
}
## write
write_csv(crispr_res, str_glue("{Sys.Date()}_crispr.csv"))
if(!dir.exists("map")) dir.create("map")
for(i in seq_len(nrow(crispr_res))) {
Biostrings::writeXStringSet(
DNAStringSet(crispr_res[[i, "map"]]),
str_glue('map/P{i+253}_sg_{crispr_res[[i, "symbol"]]}#{crispr_res[[i, "rep"]]}.fasta')
)
}
crispr_res
